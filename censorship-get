#!/bin/bash
# This master script runs the scripts which download and parse each
# blacklist.
# It must not fail even if one of the steps fail.

source config.sh

if [ ! -d "$TMP_DIR" ] ; then mkdir "$TMP_DIR" ; fi
if [ ! -d "$LISTS_DIR" ] ; then mkdir "$LISTS_DIR" ; fi
if [ ! -d "$LOG_DIR" ] ; then mkdir "$LOG_DIR" ; fi

test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%m:%S') - Censorship GET started." >> $LOGFILE  

if [ "$1" ]; then
  LISTS="$1"  
fi

# update each list
for list in $LISTS; do

  test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%m:%S') - updating list $list" >> $LOGFILE 

  # download the list and parse it
  if ! ./update_$list; then
    echo "WARNING: $list.update has failed with rc=$?!" >&2
    test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%m:%S') - WARNING: $list.update has failed with rc=$?!" >> $LOGFILE
    continue
  fi

  # second sanity check
  if [ ! -e $LISTS_DIR/$list.new ]; then
    echo "WARNING: $LISTS_DIR/$list.new has not been created!" >&2
    test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%m:%S') - WARNING: $LISTS_DIR/$list.new has not been created!" >> $LOGFILE
    continue
  fi

  mv $LISTS_DIR/$list.new $LISTS_DIR/$list

  # The by-IP list is generated only by some sources. The program assumes
  # that if the by-name list was generated correctly then this one will
  # have been too.
  if [ -e $LISTS_DIR/$list-ip.new ]; then
    mv $LISTS_DIR/$list-ip.new $LISTS_DIR/$list-ip
  fi
  
  
done

# If there are any changes, generate (but not upload) a new named.conf file
# from the intermediate parsed files stored in lists/
./build-bind-config "$LISTS"
./build-unbound-config "$LISTS"

test $LOGGING_ENABLE == true && echo "$(date '+%d/%m/%y %H:%m:%S') - Censorship GET ended." >> $LOGFILE 
